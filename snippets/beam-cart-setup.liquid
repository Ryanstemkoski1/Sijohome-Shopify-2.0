<script type="module" async crossorigin>
  import { addBeamAttributesToCart, getCurrentCart, trackCart } from "https://sdk.beamimpact.com/web-sdk/{{ settings.beam_sdk_version }}/dist/integrations/shopify.js";
  import { events, getCookieValue } from "https://sdk.beamimpact.com/web-sdk/{{ settings.beam_sdk_version }}/dist/integrations/utils.js";
  import { getConfig } from "https://sdk.beamimpact.com/web-sdk/{{ settings.beam_sdk_version }}/dist/integrations/beam.js";

  const beam = getConfig();
  await beam.readyPromise;
 
  let lastSelectedNonprofitId = null; // used to avoid duplicate calls
  window.addEventListener(events.BeamNonprofitSelectEvent.eventName, async (event) => {
    const {selectedNonprofitId, selectionId} = event.detail;
    if (selectedNonprofitId !== lastSelectedNonprofitId) {
      await addBeamAttributesToCart({
        selectedNonprofitId,
        selectionId,
        cartId: await getCookieValue("cart"),
        storeId: beam.storeId,
        chainId: beam.chainId,
      })
    }
    lastSelectedNonprofitId = selectedNonprofitId;
  });

  // Set up Rebuy event listeners; this replaces "registerCartIntegration"
  document.addEventListener('rebuy:cart.change', async (event) => {
    const currentCart = await getCurrentCart(beam);
    await trackCart(beam, currentCart.cart);
  });
</script>
